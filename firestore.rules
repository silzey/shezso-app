
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can create their own profile, and only they can read/write to it.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // Allow users to manage their own uploads subcollection
      match /uploads/{uploadId} {
        allow read, create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Products can be read by anyone (for the public marketplace).
    // Writes are simplified for development - any authenticated user can write.
    // TODO: For production, restrict this to admins:
    // allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Default deny for all other collections.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
